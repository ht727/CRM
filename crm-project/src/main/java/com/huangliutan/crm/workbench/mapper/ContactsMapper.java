package com.huangliutan.crm.workbench.mapper;

import com.huangliutan.crm.workbench.domain.Contacts;

import java.util.List;
import java.util.Map;

public interface ContactsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Fri Jun 05 20:00:58 CST 2020
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Fri Jun 05 20:00:58 CST 2020
     */
    int insert(Contacts record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Fri Jun 05 20:00:58 CST 2020
     */
    int insertSelective(Contacts record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Fri Jun 05 20:00:58 CST 2020
     */
    Contacts selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Fri Jun 05 20:00:58 CST 2020
     */
    int updateByPrimaryKeySelective(Contacts record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Fri Jun 05 20:00:58 CST 2020
     */
    int updateByPrimaryKey(Contacts record);

    /**
     * 保存联系人
     */
    int insertContacts(Contacts contacts);

    /**
     * 根据customerId查询所有的联系人
     */
    List<Contacts> selectContactsForDetailByCustomerId(String customerId);

    /**
     * 根据id删除联系人信息
     */
    int deleteContactsById(String id);

    /**
     * 根据customerId查询所有的contactsId
     */
    String[] selectContactsIdsByCustomerIds(String[] customerId);

    /**
     *根据客户ids删除对应的所有联系人
     */
    int deleteContactsByCustomerId(String[] customerId);

    /**
     * 根据名称模糊查询联系人
     */
    List<Contacts> selectContactsForDetailByFullName(String fullName);


    /**
     * 根据条件，分页查询联系人信息
     */
    List<Contacts> selectContactsForPageByCondition(Map<String,Object> map);

    /**
     *根据条件查询联系人总条数
     */
    long selectCountOfContactsByCondition(Map<String,Object> map);

    /**
     * 根据id查询联系人明细信息
     */
    Contacts selectContactsForDetailById(String id);

    /**
     * 批量删除联系人
     */
    int deleteContactsByIds(String[] ids);

    /**
     * 根据id查询联系人信息
     */
    Contacts selectContactsById(String id);

    /**
     * 更改联系人信息
     */
    int updateContacts(Contacts contacts);

}