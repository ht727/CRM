package com.huangliutan.crm.workbench.mapper;

import com.huangliutan.crm.workbench.domain.FunnelVo;
import com.huangliutan.crm.workbench.domain.Tran;

import java.util.List;
import java.util.Map;

public interface TranMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Sun Jun 07 13:09:17 CST 2020
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Sun Jun 07 13:09:17 CST 2020
     */
    int insert(Tran record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Sun Jun 07 13:09:17 CST 2020
     */
    int insertSelective(Tran record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Sun Jun 07 13:09:17 CST 2020
     */
    Tran selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Sun Jun 07 13:09:17 CST 2020
     */
    int updateByPrimaryKeySelective(Tran record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Sun Jun 07 13:09:17 CST 2020
     */
    int updateByPrimaryKey(Tran record);

    /**
     * 保存交易
     */
    int insertTran(Tran tran);

    /**
     * 根据customerId查询所有的交易
     */
    List<Tran> selectTranForDetailByCustomerId(String customerId);

    /**
     * 根据id删除交易
     */
    int deleteTranById(String id);

    /**
     * 根据客户ids查询所有的交易ids
     */
    String[] selectTranIdsByCustomerIds(String[] customerId);

    /**
     * 根据客户ids删除对应的所有的交易
     */
    int deleteTranByCustomerIds(String[] customerId);

    /**
     * 根据条件分页查询交易
     */
    List<Tran> selectTranForPageByCondition(Map<String,Object> map);

    /**
     * 根据条件，查询所有符合条件的总记录条数
     */
    long selectCountOfTranByCondition(Map<String,Object> map);

    /**
     * 根据Id查询交易明细
     */
    Tran selectTranForDetailById(String id);

    /**
     * 根据id批量删除交易
     */
    int deleteTranByIds(String[] ids);

    /**
     * 根据阶段分组查询各阶段总记录条数
     */
    List<FunnelVo> selectCountOfTranGroupByStage();

    /**
     * 根据id查询交易明细
     */
    Tran selectTranById(String id);

    /**
     * 更新交易信息
     */
    int updateTran( Tran tran);

    /**
     *根据联系人id查询交易信息
     */
    List<Tran> selectTranOfContactsByContactsId(String contactsId);
}