package com.huangliutan.crm.workbench.mapper;

import com.huangliutan.crm.workbench.domain.Activity;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 23 19:37:57 CST 2020
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 23 19:37:57 CST 2020
     */
    int insert(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 23 19:37:57 CST 2020
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 23 19:37:57 CST 2020
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 23 19:37:57 CST 2020
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 23 19:37:57 CST 2020
     */
    int updateByPrimaryKey(Activity record);

    /**
     * 保存创建的市场活动
     */
    int insertActivity(Activity activity);

    /**
     * 根据条件分页查询市场活动列表
     */
    List<Activity> selectActivityForPageByCondition(Map<String,Object> map);

    /**
     * 根据条件查询市场活动记录的总条数
     */
    long selectCountOfActivityByCondition(Map<String,Object> map);

    /**
     * 根据id查询市场活动
     */
    Activity selectActivityById(String id);

    /**
     * 修改市场活动
     */
    int updateActivity(Activity activity);

    /**
     * 删除市场活动
     */
    int deleteActivityByIds(String[] id);

    /**
     * 查询所有的市场活动
     */
    List<Activity> selectAllActivityForDetail();

    /**
     * 根据id查询所有的市场活动(选择导出文件)
     */
    List<Activity> selectActivityForDetailByIds(String[] ids);

    /**
     * 根据集合参数创建市场活动
     */
    int insertActivityByList(List<Activity> activityList);

    /**
     * 根据id查询市场活动明细
     */
    Activity selectActivityForDetailById(String id);

    /**
     * 根据线索id查询所有的相关联的市场活动
     */
    List<Activity> selectAllRelationActivityByClueId(String clueId);

    /**
     * 根据name和clueId模糊查询市场活动
     */
    List<Activity> selectActivityForDetailByNameClueId(Map<String,Object> map);

    /**
     *根据市场活动的名称模糊查询市场活动
     */
    List<Activity> selectActivityForDetailByName(String name);

    /**
     *根据联系人id查询所有关联市场活动
     */
    List<Activity> selectContactsActivityRelationByContactsId( String contactsId);

    /**
     * 根据name和contactsId模糊查询市场活动,已经关联了就不能再关联了
     */
    List<Activity> selectActivityForDetailByNameAndContactsId(Map<String,Object> map);
}